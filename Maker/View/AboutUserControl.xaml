<UserControl x:Class="Maker.View.AboutUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch"
             Background="#fafafa"
             >
    <UserControl.Resources>
        <LinearGradientBrush x:Key="LGBrush" StartPoint="0,0.5" EndPoint="1,0.5">
            <GradientStop Color="#7f00ff" Offset="0"/>
            <GradientStop Color="#ff0000" Offset="1"/>
        </LinearGradientBrush>
        <!--<Style TargetType="Button">
        <Style.Setters>
            <Setter Property="Width" Value="100"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" CornerRadius="5,5,5,5" Background="White" Name="borderBtn">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}" >
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" CornerRadius="5,5,5,5" Background="Black">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>-->
    </UserControl.Resources>
    <Grid>
        <StackPanel Name="spLanguage" Orientation="Vertical" VerticalAlignment="Top"  HorizontalAlignment="Right" Margin="5">
            <DockPanel>
                <ComboBox  FontSize="14" Name="cbLanguage" VerticalAlignment="Center"  Width="200" HorizontalAlignment="Left" SelectionChanged="ComboBox_SelectionChanged">
                    <ComboBoxItem  Content="{DynamicResource Chinese}"/>
                    <ComboBoxItem  Content="{DynamicResource English}"/>
                </ComboBox>
            </DockPanel>
        </StackPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Canvas Name="cMain" Width="540" Height="400" VerticalAlignment="Center" />
            <Line X1="0" X2="0" Y1="0" Y2="300" Margin="100,0,100,0" Stroke="#DCDCDC" VerticalAlignment="Center"/>
            <StackPanel Orientation="Vertical" >
                <TextBlock Foreground="#3c64c3" Text="关于Maker Light" HorizontalAlignment="Center" FontSize="25"/>
                <TextBlock Foreground="#454545" Text="Maker Light是一款灯光制作软件。" HorizontalAlignment="Center" FontSize="20" Margin="0,30,0,0"/>
                <Border Padding="10" CornerRadius="3" BorderBrush="#d7d7d9" BorderThickness="1" Margin="0,20,0,0">
                    <TextBox Foreground="#919191" Text="你可以从http://www.launchpadlight.com/获取最新的软件" HorizontalAlignment="Center" FontSize="18" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" IsReadOnly="True" />
                </Border>
                <TextBlock FontSize="18" FontWeight="Normal" TextWrapping="Wrap" Margin="0,20,0,0">
                 <Run Text="{DynamicResource JoinTheQGroup}" MouseLeftButtonDown="JoinQQGroup_Click" Foreground="#383838" TextDecorations="Underline" />
                     <Run Text="{DynamicResource Period}" />
                    <LineBreak/>
  <Run Text="{DynamicResource DeveloperList}" MouseLeftButtonDown="ToDeveloperListWindow" Foreground="#383838" TextDecorations="Underline" />
                <Run Text="{DynamicResource Period}" />
<Run Text="{DynamicResource Appreciate}" MouseLeftButtonDown="ToAppreciateWindow" Foreground="#383838" TextDecorations="Underline" />
                <Run Text="{DynamicResource Period}" />
                </TextBlock>
                <TextBlock Foreground="#d94c93" Text="关于代码" HorizontalAlignment="Center" FontSize="25" Margin="0,50,0,0"/>
                <Border Padding="10" CornerRadius="3" BorderBrush="#d7d7d9" BorderThickness="1" Margin="0,30,0,0">
                    <TextBox Foreground="#919191" Text="你可以从https://github.com/hhm2maker/Maker/获取完整的代码" HorizontalAlignment="Center" FontSize="16" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" IsReadOnly="True"/>
                </Border>
                <Button Content="开始体验" Margin="0,50,0,0" Width="200" Height="50" FontSize="20" Foreground="#282828"  HorizontalAlignment="Center" Click="ToCatalogUserControl">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="3" CornerRadius="5,5,5,5" Background="White" Name="borderBtn" BorderBrush="{StaticResource LGBrush}">
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <!--<DoubleAnimation Storyboard.TargetName="borderBtn" 
					Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"
					BeginTime="00:00:00" Duration="00:00:01" From="0" To="1" />-->
                                                <ColorAnimation Storyboard.TargetName="borderBtn" 
					Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:1" From="#7f00ff" To="#ff7f00" />
                                                <ColorAnimation Storyboard.TargetName="borderBtn" 
					Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:1" From="#ff0000" To="#00ff00" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <!--<DoubleAnimation Storyboard.TargetName="borderBtn" 
					Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"
					BeginTime="00:00:00" Duration="00:00:01" From="0" To="1" />-->
                                                <ColorAnimation Storyboard.TargetName="borderBtn" 
					Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:1" From="#ff7f00" To="#7f00ff" />
                                                <ColorAnimation Storyboard.TargetName="borderBtn" 
					Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:1" From="#00ff00" To="#ff0000" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
        </StackPanel>
        <!--  <Polygon Points="10,50 180,50 180,150 10,150" Fill="Red" 
       StrokeThickness="1" Stroke="Black" />-->

        <!--<Canvas.Resources>
                <PathGeometry x:Key="path" Figures="M0.6,46.8 125,7 180.2,63 244.2,7 243.8 124.8 338,54 549.6,0 364.2,193 337.8,261.4 540.6,331.2 338.6,357.6 122.4,210.8 124.2 79.8  0.6,46.8" />
                <Storyboard x:Key="pathStoryboard" >
                    <MatrixAnimationUsingPath PathGeometry="{StaticResource path}"
                                          Storyboard.TargetName="ButtonMatrixTransform"
                                          Storyboard.TargetProperty="Matrix"
                                          DoesRotateWithTangent="True"
                                          Duration="0:0:15" RepeatBehavior="Forever" >
                    </MatrixAnimationUsingPath>
                </Storyboard>
            </Canvas.Resources>
            <Canvas.Triggers>
                <EventTrigger RoutedEvent="Control.Loaded">
                    <BeginStoryboard Storyboard="{StaticResource pathStoryboard}" />
                </EventTrigger>
            </Canvas.Triggers>
            <Path Data="{StaticResource path}" Stroke="Black" StrokeThickness="1" />
            <Line X1="0" Y1="0" X2="50" Y2="1">
                <Line.Stroke>
                        <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                            <GradientStop Color="Red" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                </Line.Stroke>
                        <Line.RenderTransform>
                    <MatrixTransform x:Name="ButtonMatrixTransform" />
                </Line.RenderTransform>
            </Line>-->
    </Grid>
</UserControl>
