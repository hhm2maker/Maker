<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <!--默认Menu样式-->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--菜单项MenuItem样式FIconMenuItem-->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="BorderBrush" Value="{DynamicResource DividingLineColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource bgTitleColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!--Item-->
                    <Border  x:Name="border" Background="{DynamicResource bgTitleColor}"  Height="{TemplateBinding Height}" Opacity="1">
                        <Grid  VerticalAlignment="Center" Margin="{TemplateBinding Margin}" x:Name="Main_Bg">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="16" x:Name="arrow_col" SharedSizeGroup="MenumItemArrow"/>
                            </Grid.ColumnDefinitions>
                            <!--icon-->
                            <Image x:Name="PART_Icon" Source="{TemplateBinding Icon}" Margin="5,3,1,3" Width="20" RenderOptions.BitmapScalingMode="Fant" />
                            <!--Header-->
                            <ContentPresenter Grid.Column="1" x:Name="txtHeader" Margin="3,1,5,1" MinWidth="90"
                                          RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header"
                                              />
                            <!--快捷键 InputGestureText 暂不支持你了 -->
                            <TextBlock Grid.Column="2" Margin="3,1,3,1" x:Name="IGTHost" Text="{TemplateBinding InputGestureText}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="Center" Visibility="Visible" Foreground="White" />
                            <!--右指针-->
                            <!--<TextBlock x:Name="PART_Arrow" Grid.Column="3" Text="&#xe605;" Foreground="White" 
                                       FontSize="14" />-->
                            <Image x:Name="PART_Arrow" Grid.Column="3" Source="../../View/Resources/Image/tochild.png" RenderOptions.BitmapScalingMode="Fant" Width="12" Height="12"
                                       />
                            <!--淡出子集菜单容器-->
                            <Popup x:Name="SubMenuPopup" AllowsTransparency="true" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Placement="Bottom"  Focusable="false" VerticalOffset="0"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border Background="{TemplateBinding Background}"  CornerRadius="0" Margin="5"
                                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#535353" TargetName="Main_Bg"/>
                        </Trigger>
                        <!--TopLevelHeader:第一级菜单（有子菜单）-->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--TopLevelItem 第一级菜单（无子级）-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--SubmenuHeader:子菜单，有子菜单-->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Arrow"/>
                            <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                        </Trigger>
                        <!--SubMenuItem:子菜单，无子级-->
                        <Trigger Property="Role" Value="SubMenuItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                        </Trigger>
                        <!--选中状态，优先级将高于Icon-->
                        <Trigger Property="IsChecked" Value="True">
                            <!--<Setter TargetName="PART_Icon" Value="&#xe62a;" Property="Text"></Setter>-->
                            <!--<Setter TargetName="PART_Icon" Value="18" Property="FontSize"></Setter>-->
                            <!--<Setter TargetName="PART_Icon" Value="{StaticResource CheckedForeground}" Property="Foreground"></Setter>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Value="{StaticResource DisableOpacity}" Property="Opacity"></Setter>-->
                        </Trigger>
                        <!--高亮状态-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource MenuMouseOverBackground}"></Setter>-->
                            <!--<Setter Property="Foreground" Value="{StaticResource MenuMouseOverForeground}"></Setter>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource MenuPressedBackground}"></Setter>-->
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <!--子菜单打开状态-->
                        <Trigger Property="IsSubmenuOpen" Value="true" >
                            <!--<Setter TargetName="PART_Arrow" Value="{StaticResource CheckedForeground}" Property="Foreground"></Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="bigMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="BorderBrush" Value="{DynamicResource DividingLineColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource bgTitleColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!--Item-->
                    <Border  x:Name="border" Background="Transparent" Height="{TemplateBinding Height}" Opacity="1">
                        <Grid  VerticalAlignment="Center" Margin="{TemplateBinding Margin}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="16" x:Name="arrow_col" SharedSizeGroup="MenumItemArrow"/>
                            </Grid.ColumnDefinitions>
                            <!--icon-->
                            <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="White" Margin="5,1,1,1"
                                    FontSize="22"/>
                            <!--Header-->
                            <ContentPresenter Grid.Column="1" x:Name="txtHeader" Margin="3,1,5,1" MinWidth="90"
                                          RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header"
                                              />
                            <!--快捷键 InputGestureText 暂不支持你了 -->
                            <TextBlock Grid.Column="2" Margin="3,1,3,1" x:Name="IGTHost" Text="{TemplateBinding InputGestureText}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="Center" Visibility="Visible" Foreground="White" />
                            <!--右指针-->
                            <Image x:Name="PART_Arrow" Grid.Column="3" Source="../../View/Resources/Image/tochild.png" RenderOptions.BitmapScalingMode="Fant" Width="12" Height="12"
                                       />
                            <!--淡出子集菜单容器-->
                            <Popup x:Name="SubMenuPopup" AllowsTransparency="true" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Placement="Bottom"  Focusable="false" VerticalOffset="0"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border Background="{TemplateBinding Background}"  CornerRadius="0" Margin="5"
                                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--TopLevelHeader:第一级菜单（有子菜单）-->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--TopLevelItem 第一级菜单（无子级）-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--SubmenuHeader:子菜单，有子菜单-->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Arrow"/>
                            <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                        </Trigger>
                        <!--SubMenuItem:子菜单，无子级-->
                        <Trigger Property="Role" Value="SubMenuItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                        </Trigger>
                        <!--选中状态，优先级将高于Icon-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Icon" Value="&#xe62a;" Property="Text"></Setter>
                            <Setter TargetName="PART_Icon" Value="18" Property="FontSize"></Setter>
                            <!--<Setter TargetName="PART_Icon" Value="{StaticResource CheckedForeground}" Property="Foreground"></Setter>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Value="{StaticResource DisableOpacity}" Property="Opacity"></Setter>-->
                        </Trigger>
                        <!--高亮状态-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource MenuMouseOverBackground}"></Setter>-->
                            <!--<Setter Property="Foreground" Value="{StaticResource MenuMouseOverForeground}"></Setter>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource MenuPressedBackground}"></Setter>-->
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <!--子菜单打开状态-->
                        <Trigger Property="IsSubmenuOpen" Value="true" >
                            <!--<Setter TargetName="PART_Arrow" Value="{StaticResource CheckedForeground}" Property="Foreground"></Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--默认右键菜单ContextMenu样式-->
    <Style  TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="BorderBrush" Value="#e3e3e3"/>
        <Setter Property="Background"  Value="{DynamicResource bgTitleColor}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <!--<Setter Property="ItemContainerStyle" Value="{StaticResource DefaultMenuItem}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Margin="5"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                        </Border>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Effect" Value="{StaticResource DefaultDropShadow}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="myContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="BorderBrush" Value="#e3e3e3"/>
        <Setter Property="Background" Value="{DynamicResource bgTitleColor}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <!--<Setter Property="ItemContainerStyle" Value="{StaticResource DefaultMenuItem}"/>-->
        <!--<Setter Property="ItemContainerStyle" Value="{StaticResource bigMenuItem}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Margin="5"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                        </Border>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Effect" Value="{StaticResource DefaultDropShadow}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="#282828"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="ArialMT"/>
        <Setter Property="Placement" Value="Bottom"/>
        <Setter Property="HorizontalOffset" Value="-16"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Height="5*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Viewbox Grid.Row="0" Grid.Column="0" Stretch="Uniform"  HorizontalAlignment="Left" Margin="10,0,0,0">
                            <Path Data="M48.75,116.75 L40.5,124 57.25,124 z" Fill="{TemplateBinding Background}" HorizontalAlignment="Left" Height="8.25"  Stretch="Fill" Stroke="{TemplateBinding Background}" VerticalAlignment="Top" Width="17.75"/>
                        </Viewbox>
                        <Border Grid.Row="1" x:Name="Root" Grid.ColumnSpan="2"  CornerRadius="6" Margin="0,-2,0,0"  
                                  Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <Border.Resources>
                                <Storyboard x:Key="Visible State"/>
                                <Storyboard x:Key="Normal State"/>
                            </Border.Resources>
                            <ContentPresenter TextBlock.Foreground="White" TextBlock.FontFamily="ArialMT"  
                                                TextBlock.FontSize="16"
                            Content="{TemplateBinding Content}"  
                            ContentTemplate="{TemplateBinding ContentTemplate}"  
                            Cursor="{TemplateBinding Cursor}"  
                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    
    <!--<Border x:Name="Root" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" Background="#FFFFFFFF" BorderBrush="{TemplateBinding BorderBrush}">  
                          <Border BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">  
                              <Border.Resources>  
                                  <Storyboard x:Key="Visible State"/>  
                                  <Storyboard x:Key="Normal State"/>  
                              </Border.Resources>  
                              <ContentPresenter  
                            Content="{TemplateBinding Content}"  
                            ContentTemplate="{TemplateBinding ContentTemplate}"  
                            Cursor="{TemplateBinding Cursor}"  
                            Margin="{TemplateBinding Padding}"/>  
                          </Border>  
                      </Border>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>