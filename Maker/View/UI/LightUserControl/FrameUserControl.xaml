<lightusercontrol:BaseLightUserControl
    xmlns:lightusercontrol="clr-namespace:Maker.View.LightUserControl"
    x:Class="Maker.View.LightUserControl.FrameUserControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:view="clr-namespace:Maker.View.UI.Device.ColorPanel"
        xmlns:launchpad="clr-namespace:Maker.View.Device"
    xmlns:viewmodel="clr-namespace:Maker.ViewModel"
    mc:Ignorable="d"
    Focusable="True"
     xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:widget="clr-namespace:Maker.View.UI.Device.Widget"
    DataContext="{Binding Source={StaticResource Locator},Path=Main}"
    HorizontalAlignment="Center"
    VerticalAlignment="Center"
    Background="#262829"
    Loaded="BaseLightUserControl_Loaded"
    >
    <UserControl.Effect>
        <DropShadowEffect Color="#1c1e1f"  BlurRadius="20" />
    </UserControl.Effect>
    <UserControl.Resources>
        <viewmodel:BindingProxy x:Key="BindingProxy"
                            Data="{Binding}" />

        <Style TargetType="Button">
            <Style.Setters>
                <Setter Property="Foreground" Value="#f0f0f0"/>
                <Setter Property="Width" Value="100"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}" >
                            <Border  CornerRadius="5,5,5,5" Background="#1c1e1f" Name="btnTabItem">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        </Style>
        <!-- TabItem -->
        <SolidColorBrush x:Key="TabItem.Static.Background" Color="#535353"/>
        <!--  
    <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F0F0F0" Offset="0.0"/>
        <GradientStop Color="#E5E5E5" Offset="1.0"/>
    </LinearGradientBrush>
    -->
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#282828"/>
        <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="#282828"/>
        <!--  
   <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#ECF4FC" Offset="0.0"/>
        <GradientStop Color="#DCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    -->
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#282828"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#535353"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#282828"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#282828"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#282828"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Static.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Static.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Static.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Static.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="#282828"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="#282828"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- TabControl -->
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="#282828" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Name="gMain">
        <Grid>
            <DockPanel>
                <Canvas DockPanel.Dock="Left">
                    <Rectangle Width="3" Height="100" Canvas.Top="100" Name="rLeft" Fill="#3399ff"/>
                </Canvas>
                <StackPanel DockPanel.Dock="Left" Orientation="Vertical" Width="90" Name="spLeft">
                    <DockPanel Background="Transparent" MouseLeftButtonUp="iStyle_MouseLeftButtonUp" Width="90"  Height="100" >
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                            <Image  Name="iStyle" Source="../../Resources/Image/style_gray.png" Width="40" Height="40" />
                            <TextBlock Name="tbStyle" Text="{DynamicResource Style}" FontSize="16" Foreground="#a8a9a9" HorizontalAlignment="Center" Margin="0,5,0,0" />
                        </StackPanel>
                    </DockPanel>
                    <DockPanel Name="dpColor" Background="Transparent" MouseLeftButtonUp="Canvas_MouseLeftButtonUp" MouseRightButtonUp="dpColor_MouseRightButtonUp"  Width="90"  Height="100">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                            <Canvas  Width="40" Height="40" >
                                <Canvas Width="38" Height="38"  Background="Red" Canvas.Left="1" Canvas.Top="1" Name="cColor"/>
                                <Image Source="../../Resources/Image/color_black.png" Width="40" Height="40" />
                            </Canvas>
                            <TextBlock Name="tbColor" Text="{DynamicResource Color}" FontSize="16" Foreground="#ffffff" HorizontalAlignment="Center" Margin="0,5,0,0"/>
                        </StackPanel>
                    </DockPanel>
                    <DockPanel Name="dpSelect" Background="Transparent" MouseLeftButtonUp="iSelect_MouseLeftButtonUp" MouseRightButtonUp="iSelect2_MouseRightButtonUp"  Width="90"  Height="100">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                            <Image  Name="iSelect" Source="../../Resources/Image/select_gray.png" Width="40" Height="40" />
                            <TextBlock Name="tbSelect" Text="{DynamicResource Select}" FontSize="16" Foreground="#a8a9a9" HorizontalAlignment="Center" Margin="0,5,0,0"/>
                        </StackPanel>
                    </DockPanel>
                    <DockPanel Background="Transparent" MouseLeftButtonUp="ShowImageControl"  Width="90"  Height="100">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                            <Image  Name="iPicture2"  Source="../../Resources/Image/picture_gray.png" Width="40" Height="40" />
                            <TextBlock Name="tbPicture" Text="{DynamicResource Image}" FontSize="16" Foreground="#a8a9a9" HorizontalAlignment="Center" Margin="0,5,0,0"/>
                        </StackPanel>

                    </DockPanel>
                </StackPanel>
                <Popup Name="popColor" PlacementTarget="{Binding ElementName=dpColor}" StaysOpen="False" Placement="Right"  AllowsTransparency="True" PopupAnimation="Fade">
                    <StackPanel Background="#1c1e1f">
                        <view:CompleteColorPanel x:Name="completeColorPanel" />
                    </StackPanel>
                </Popup>
                <Popup Name="popSelect" PlacementTarget="{Binding ElementName=dpSelect}" StaysOpen="False" Placement="Right"  AllowsTransparency="True" PopupAnimation="Fade">
                    <StackPanel Background="#1c1e1f" Orientation="Vertical">
                        <GroupBox Header="选择模式" FontSize="15" Foreground="#fff" Margin="10,15,10,0" >
                            <StackPanel Orientation="Vertical" Margin="10">
                                <RadioButton IsChecked="true" GroupName="gnSelect" Grid.Column="0" Name="rbSelect" Content="{DynamicResource Select}" FontSize="16" Foreground="#fff"/>
                                <RadioButton GroupName="gnSelect" Grid.Column="1" Name="rbAdd"  Content="{DynamicResource Add}" FontSize="16" Foreground="#fff"/>
                                <RadioButton GroupName="gnSelect" Grid.Column="0" Name="rbIntersection"  Content="{DynamicResource Intersection}" FontSize="16" Foreground="#fff"/>
                                <RadioButton GroupName="gnSelect" Grid.Column="1"  Name="rbComplement" Content="{DynamicResource Complement}" FontSize="16" Foreground="#fff"/>
                            </StackPanel>
                        </GroupBox>
                        <WrapPanel  Margin="0,15,0,0" Width="auto" HorizontalAlignment="Center">
                            <Button  Name="btnLeftUp"  Width="180" Click="FourAreaClick" Content="{DynamicResource UpperLeft}"/>
                            <Button  Name="btnRightUp" Width="180"  Click="FourAreaClick" Content="{DynamicResource UpperRight}"/>
                        </WrapPanel>
                        <WrapPanel  Margin="0,10,0,0" Width="auto" HorizontalAlignment="Center">
                            <Button  Name="btnLeftDown"  Width="180" Click="FourAreaClick" Content="{DynamicResource LowerLeft}"/>
                            <Button  Name="btnRightDown" Width="180"  Click="FourAreaClick" Content="{DynamicResource LowerRight}"/>
                        </WrapPanel>
                        <Grid Margin="0,20,0,0" >
                            <StackPanel Margin="0,37,0,0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" >
                                <Button Margin="-12"  Style="{x:Null}"  Name="btnToLeft" Click="SelectMove">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </ControlTemplate>
                                    </Button.Template>
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="MouseEnter">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="path2" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="#13191E" To="Orange" />
                                                    <ColorAnimation Storyboard.TargetName="path2" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="#13191E" To="Yellow" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="MouseLeave">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="path2" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="Orange" To="#13191E" />
                                                    <ColorAnimation Storyboard.TargetName="path2" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="Yellow" To="#13191E" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M0.5,11 10,0 59,0 49,11" StrokeThickness="2" Fill="Transparent" >
                                                <Path.Stroke>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Orange" Offset="0"/>
                                                        <GradientStop Color="Yellow" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                            </Path>
                                            <Path Data="M50,49 60,40 60,1 49,11" StrokeThickness="2" Fill="Transparent" >
                                                <Path.Stroke>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Yellow" Offset="0"/>
                                                        <GradientStop Color="Yellow" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                            </Path>
                                            <Rectangle x:Name="path2" Width="51" Height="40" HorizontalAlignment="Left" Margin="0,10,0,0" StrokeThickness="2">
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Orange" Offset="0"/>
                                                        <GradientStop Color="Yellow" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="#13191E" Offset="0"/>
                                                        <GradientStop Color="#13191E" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <TextBlock DockPanel.Dock="Top" Text="←" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,10,0" Foreground="#fff" FontSize="20" />
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <Button Margin="0"  Style="{x:Null}" Name="btnToDown" Click="SelectMove">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </ControlTemplate>
                                    </Button.Template>
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="MouseEnter">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="path3" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="#13191E" To="Yellow" />
                                                    <ColorAnimation Storyboard.TargetName="path3" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="#13191E" To="Green" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="MouseLeave">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="path3" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="Yellow" To="#13191E" />
                                                    <ColorAnimation Storyboard.TargetName="path3" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="Green" To="#13191E" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M0.5,11 10,0 59,0 49,11" StrokeThickness="2" Fill="Transparent" >
                                                <Path.Stroke>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Yellow" Offset="0"/>
                                                        <GradientStop Color="Green" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                            </Path>
                                            <Path Data="M50,49 60,40 60,1 49,11" StrokeThickness="2" Fill="Transparent" >
                                                <Path.Stroke>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Green" Offset="0"/>
                                                        <GradientStop Color="Green" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                            </Path>
                                            <Rectangle x:Name="path3" Width="51" Height="40" HorizontalAlignment="Left" Margin="0,10,0,0" StrokeThickness="2">
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Yellow" Offset="0"/>
                                                        <GradientStop Color="Green" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="#13191E" Offset="0"/>
                                                        <GradientStop Color="#13191E" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <TextBlock DockPanel.Dock="Top" Text="↓" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,10,0" Foreground="#fff" FontSize="20" />
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <Button  Margin="-12"   Style="{x:Null}" Name="btnToRight" Click="SelectMove">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </ControlTemplate>
                                    </Button.Template>
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="MouseEnter">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="path4" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="#13191E" To="Green" />
                                                    <ColorAnimation Storyboard.TargetName="path4" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="#13191E" To="Cyan" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="MouseLeave">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="path4" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="Green" To="#13191E" />
                                                    <ColorAnimation Storyboard.TargetName="path4" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="Cyan" To="#13191E" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M0.5,11 10,0 59,0 49,11" StrokeThickness="2" Fill="Transparent" >
                                                <Path.Stroke>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Green" Offset="0"/>
                                                        <GradientStop Color="Cyan" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                            </Path>
                                            <Path Data="M50,49 60,40 60,1 49,11" StrokeThickness="2" Fill="Transparent" >
                                                <Path.Stroke>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Cyan" Offset="0"/>
                                                        <GradientStop Color="Cyan" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                            </Path>
                                            <Rectangle x:Name="path4" Width="51" Height="40" HorizontalAlignment="Left" Margin="0,10,0,0" StrokeThickness="2">
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="Green" Offset="0"/>
                                                        <GradientStop Color="Cyan" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                        <GradientStop Color="#13191E" Offset="0"/>
                                                        <GradientStop Color="#13191E" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <TextBlock DockPanel.Dock="Top" Text="→" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,10,0" Foreground="#fff" FontSize="20" />
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                            <Button Margin="0"  Style="{x:Null}" Name="btnToUp" Click="SelectMove" VerticalAlignment="Top">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </ControlTemplate>
                                </Button.Template>
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="path" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="#13191E" To="Red" />
                                                <ColorAnimation Storyboard.TargetName="path" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="#13191E" To="Orange" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="path" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="Red" To="#13191E" />
                                                <ColorAnimation Storyboard.TargetName="path" 
					Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
					BeginTime="00:00:00" Duration="00:00:0.5" From="Orange" To="#13191E" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Button.Triggers>
                                <Button.Content>
                                    <Grid>
                                        <Path Data="M0.5,11 10,0 59,0 49,11" StrokeThickness="2" Fill="Transparent" >
                                            <Path.Stroke>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="Red" Offset="0"/>
                                                    <GradientStop Color="Orange" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                        </Path>
                                        <Path Data="M50,48 60,37 60,1 49,11" StrokeThickness="2" Fill="Transparent" >
                                            <Path.Stroke>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="Orange" Offset="0"/>
                                                    <GradientStop Color="Orange" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                        </Path>
                                        <Rectangle x:Name="path" Width="51" Height="40" HorizontalAlignment="Left" Margin="0,10,0,0" StrokeThickness="2">
                                            <Rectangle.Stroke>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="Red" Offset="0"/>
                                                    <GradientStop Color="Orange" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Stroke>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#13191E" Offset="0"/>
                                                    <GradientStop Color="#13191E" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <TextBlock DockPanel.Dock="Top" Text="↑" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,10,0" Foreground="#fff" FontSize="20" />
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </Grid>
                        <StackPanel  Margin="20,25,20,20" Width="auto" >
                            <Button Name="btnRegionCopy"   Width="180" Click="btnRegionCopy_Click" Content="{DynamicResource CopyTo}"/>
                            <Button Name="btnRegionClear"   Width="180" Click="btnRegionClear_Click"  Content="{DynamicResource Clear}"/>
                        </StackPanel>
                    </StackPanel>
                </Popup>
                <Grid Focusable="True" DockPanel.Dock="Left">
                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{DynamicResource WholePage}" IsEnabled="False"/>
                            <Separator />
                            <MenuItem Header="{DynamicResource HorizontalFlipping}" Click="btnHorizontalFlipping_Click" />
                            <MenuItem Header="{DynamicResource VerticalFlipping}" Click="btnVerticalFlipping_Click" />
                            <MenuItem Header="{DynamicResource ClockwiseRotation}"  Click="btnClockwise_Click" />
                            <MenuItem Header="{DynamicResource AntiClockwiseRotation}"  Click="btnAntiClockwise_Click"  />
                            <Separator />
                            <MenuItem Header="{DynamicResource CopyTo}" Click="btnCopy_Click"/>
                            <Separator />
                            <MenuItem Header="{DynamicResource Clear}" Click="btnClear_Click"/>
                        </ContextMenu>
                    </Grid.ContextMenu>
                    <Canvas ClipToBounds="True" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  MouseDown="BaseLightUserControl_MouseDown" MouseUp="BaseLightUserControl_MouseUp" MouseMove="BaseLightUserControl_MouseMove" MouseLeave="Canvas_MouseLeave">
                        <Viewbox Stretch="Fill" Name="cMain" Width="{Binding ElementName=sliderSize,Path=Value}" Height="{Binding ElementName=sliderSize,Path=Value}">
                            <Canvas Width="600" Height="600" >
                                <launchpad:DrawLaunchpadPro Data="{Binding Welcome.NowLightLight}" SelectData="{Binding Welcome.Selects}" PreviewKeyDown="BaseLightUserControl_KeyDown" PreviewKeyUp="BaseLightUserControl_PreviewKeyUp" HorizontalAlignment="Center" Focusable="True" VerticalAlignment="Center"  PreviewMouseDown="Canvas_MouseDown"  MouseLeave="mLaunchpad_MouseLeave" MouseEnter="mLaunchpad_MouseEnter" PreviewMouseUp="Canvas_MouseUp" MouseMove="mLaunchpad_MouseMove" x:Name="mLaunchpad"/>
                                <widget:TextCanvas Width="600" Height="600" Data="{Binding Welcome.Texts}" x:Name="cText" />
                            </Canvas>
                        </Viewbox>
                    </Canvas>
                    <Grid Height="60" VerticalAlignment="Top">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="35" HorizontalAlignment="Left" Name="iSave" Source="../../Resources/Image/save_gray.png" RenderOptions.BitmapScalingMode="Fant"  MouseLeftButtonDown="spSaveFile_MouseLeftButtonDown" MouseEnter="Image_MouseEnter" MouseLeave="Image_MouseLeave"/>
                            <Image Width="35" HorizontalAlignment="Left" Name="iMembrane"  Margin="10,0,0,0" Source="../../Resources/Image/membrane_gray.png" RenderOptions.BitmapScalingMode="Fant"  MouseLeftButtonDown="ShowMembrane" />
                        </StackPanel>
                        <StackPanel  Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock   Margin="20,0,5,0" Width="100"  Foreground="White" Text="{DynamicResource NowTimeColon}" />
                            <TextBlock  Name="tbTimeNow"  Margin="5,0,20,0" Width="60"  Foreground="White" TextAlignment="Center" Text="{Binding Welcome.CurrentFrame}"/>
                        </StackPanel>
                        <Image DockPanel.Dock="Right" Width="25" Margin="0,0,15,0" HorizontalAlignment="Right"  Source="../../Resources/Image/close_uc.png" RenderOptions.BitmapScalingMode="Fant"  MouseLeftButtonDown="Image_MouseLeftButtonDown" />
                    </Grid>
                    <DockPanel  Height="60" VerticalAlignment="Bottom" >
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" >
                            <StackPanel Orientation="Horizontal" >
                                <Border Background="Transparent" CornerRadius="5,0,0,5" BorderBrush="#a8a9a9" BorderThickness="2" Padding="8" Height="40"  >
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding ChangeNowTimePointCmd}" CommandParameter="Left"  />
                                    </Border.InputBindings>
                                    <Image Source="{Binding Welcome.LeftImgSource}" Width="20" Height="20" RenderOptions.BitmapScalingMode="Fant"/>
                                </Border>
                                <Border  BorderBrush="#a8a9a9" BorderThickness="0,2,0,2" Padding="8" Height="40" Background="#1c1e1f">
                                    <StackPanel Orientation="Horizontal" Width="auto" HorizontalAlignment="Center">
                                        <TextBox Name="tbTimePointCountLeft" Width="60" Background="#1c1e1f" BorderThickness="0" TextAlignment="Right" >
                                            <TextBox.Text>
                                                <Binding Path="Welcome.NowTimePoint" UpdateSourceTrigger="PropertyChanged" >
                                                    <Binding.ValidationRules>
                                                        <viewmodel:NowTimePointValidationRule x:Name="nowTimePointValidationRule">
                                                            <viewmodel:NowTimePointValidationRule.Params>
                                                                <viewmodel:ValidationParams Data="{Binding Source={StaticResource BindingProxy},Path=Data.Welcome.LiTime.Count}"/>
                                                            </viewmodel:NowTimePointValidationRule.Params>
                                                        </viewmodel:NowTimePointValidationRule>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <TextBlock Foreground="White"  Background="{x:Null}" Text=" / " />
                                        <TextBlock Name="tbTimePointCount" Width="60"  Foreground="White"  Background="{x:Null}" Text="{Binding Welcome.AllTimePoint}" />
                                    </StackPanel>
                                </Border>
                                <Border Background="Transparent" CornerRadius="0,5,5,0" BorderBrush="#a8a9a9" BorderThickness="2" Padding="8" Height="40" >
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding ChangeNowTimePointCmd}" CommandParameter="Right"  />
                                    </Border.InputBindings>
                                    <Image Source="{Binding Welcome.RightImgSource}" Width="20" Height="20" RenderOptions.BitmapScalingMode="Fant"/>
                                </Border>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
                                <Border Background="Transparent" CornerRadius="5,0,0,5" BorderBrush="#a8a9a9" BorderThickness="2" Padding="8" Height="40" >
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding AddOrDeleteTimePointCmd}" CommandParameter="Add"  />
                                    </Border.InputBindings>
                                    <Image Source="../../Resources/Image/add_blue.png" RenderOptions.BitmapScalingMode="Fant" />
                                </Border>
                                <!--MouseLeftButtonDown="btnDeleteTimePoint_Click"-->
                                <Border  Background="Transparent" BorderBrush="#a8a9a9" CornerRadius="0,5,5,0" BorderThickness="0,2,2,2" Padding="8" Height="40" >
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding AddOrDeleteTimePointCmd}" CommandParameter="Delete"  />
                                    </Border.InputBindings>
                                    <Image Source="{Binding Welcome.DeleteImgSource}" Width="20" Height="20" RenderOptions.BitmapScalingMode="Fant"/>
                                </Border>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
                                <Border Background="Transparent" CornerRadius="5,0,0,5" BorderBrush="#a8a9a9" BorderThickness="2" Padding="8" Height="40" >
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding AddOrDeleteTimePointCmd}" CommandParameter="AddStart"  />
                                    </Border.InputBindings>
                                    <Image Source="{Binding Welcome.StartImgSource}" Width="20" Height="20" RenderOptions.BitmapScalingMode="Fant"/>
                                </Border>
                                <Border  BorderBrush="#a8a9a9" BorderThickness="0,2,0,2" Padding="8" Height="40" Background="#1c1e1f">
                                    <TextBox TextChanged="tbInsertDiyTimePoint_TextChanged" Name="tbInsertDiyTimePoint" Background="#1c1e1f" BorderThickness="0" Width="100"  />
                                </Border>
                                <Border Background="Transparent" CornerRadius="0,5,5,0" BorderBrush="#a8a9a9" BorderThickness="2" Padding="8" Height="40" >
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding AddOrDeleteTimePointCmd}" CommandParameter="{Binding ElementName=tbInsertDiyTimePoint,Path=Text}"  />
                                    </Border.InputBindings>
                                    <Image Name="iAdd" Source="../../Resources/Image/add_gray.png" RenderOptions.BitmapScalingMode="Fant" />
                                </Border>
                                <Slider Name="sliderSize" Margin="20,0,0,0" Visibility="Collapsed" ValueChanged="sliderSize_ValueChanged" Maximum="1200" Minimum="300" Value="600"  TickPlacement="BottomRight"  Width="150" VerticalAlignment="Center"  />
                            </StackPanel>
                        </StackPanel>
                    </DockPanel>
                    <StackPanel Orientation="Vertical" Name="spRight" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Collapsed">
                        <StackPanel VerticalAlignment="Center">
                            <Button  Width="180" Click="SaveCanvas" Content="{DynamicResource SaveCanvas}"/>
                            <Button  Width="180" Click="SaveLongCanvas" Content="{DynamicResource SaveLongCanvas}"/>
                        </StackPanel>
                        <StackPanel VerticalAlignment="Center" Margin="0,50,0,0" >
                            <Button  Width="180" Click="NewTextFile" Content="{DynamicResource NewTextFile}"/>
                            <Button  Width="180" Click="LoadTextFile" Content="{DynamicResource LoadTextFile}"/>
                            <Button  Width="180" Click="SaveTextFile" Content="{DynamicResource SaveTextFile}"/>
                            <ListBox Name="lbText" Width="180"  ItemsSource="{Binding Welcome.ListBoxData}"  PreviewKeyDown="LbText_PrevieKeyDown" PreviewKeyUp="LbText_PreviewKeyUp"/>
                            <Button  Width="180" Click="NewText" Content="{DynamicResource NewText}"/>
                            <Button  Width="180" Click="EditText" Content="{DynamicResource EditText}"/>
                            <Button  Width="180" Click="DeleteText" Content="{DynamicResource DeleteText}"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </DockPanel>
        </Grid>
    </Grid>
</lightusercontrol:BaseLightUserControl>
