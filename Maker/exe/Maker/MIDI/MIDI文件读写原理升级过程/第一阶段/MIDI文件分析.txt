77 84 104 100      // “MThd”
0 0 0 6            // 长度always 6，后面有6个字节的数据
0 0                // 0－单轨; 1－多规，同步; 2－多规，异步
0 1                // 轨道数，即为”MTrk”的个数  
0 96               // 基本时间格式，即一个四分音符的tick数，tick是MIDI中的最小时间单位
77 84 114 107      // “MTrk”，全局轨为附加信息(如标题版权速度和系统码(Sysx)等) 
0 0 0 34           // 长度   26 +  动作 * 4
0 255 3            // 音轨名称
2                  // 长度
49 0                
0 255 88           // 拍号标记
4                  // 长度
4 2 36 8           // nn dd cc bb 拍号表示为四个数字。nn和dd代表分子和分母。分母指的是2的dd次方，例如，2代表4，3代表8。cc代表一个四分音符应该占多少个MIDI时间单位，bb代表一个四分音符的时值等价于多少个32分音符。 因此，完整的 6 / 8拍号应该表示为 FF 58 04 06 03 24 08 。这是， 6 / 8拍号（ 8等于2的三次方，因此，这里是06 03），四分音符是32个MIDI时间间隔（十六进制24即是32），四分音符等于8个三十二分音符。
0 255 88           // 拍号标记     
4                  // 长度
4 2 36 8           // nn dd cc bb
0  144 36 127      // 00:delta_time; 9n:打开n通道发音; xx yy: 第一个数据是音符代号。有128个音，对MIDI设备，编号为0至127个（其中中央C音符代号是60）。 第二个数据字节是速度，从0到127的一个值。这表明，用多少力量弹奏。 一个速度为零的开始发声信息被认为，事实上的一个停止发声的信息。此处为以64力度发出67音符。
12 128 36 64
0 255 47 0         // 音轨终止


0 144 36 127 = 0 90 24 7f
12 128 36 64 = c 80 24 40

0 90 24 7f ：0时间 9=打开 90打开0通道发音 24代表音符 7f=127，代表力度，灯光中代表颜色
c 80 24 40 : c时间 8=关闭 80关闭0通道发音 24代表音符 40=64， 代表力度，灯光中代表颜色(8x 松开音符 音符(00~7F):松开的音符 力度:00~7F)
             [c=12，替换测试24，延迟了两倍的灯光颜色]

[24 = C1 
 25 = C#1]

0
144
37
127
12
128
37
64

12 128 36 64
12=间隔是对的。
每次出现一次是和上次时间的间隔
之后就会变成
0 x x x