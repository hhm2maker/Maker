当你看到这篇文档的时候已经进入第二阶段了(2018/2/3)：本文档也是从第二阶段开始决定记录。
进入第二阶段的契机：有用户反映两个Track之间相差时间过长读写MIDI文件会出现问题。
可能进入第三阶段的契机：完善全局数据。
---------
第一阶段：
原理：通过144(90)/128(80)判断是否是Track。
MIDI文件分析：记录于[第一阶段---MIDI文件分析.txt]
C#代码实现：记录于[第一阶段---读写部分代码.txt]
---------
第二阶段(伪)：
原因：第一阶段的时间由一个字节存储，如超过127就会出现问题，而超过255则会舍去之上的数据。
原理：从尾读取。读：通过18-21的字节(下标从0开始)获取一共有多少个Track,减去末4个字节。然后从中读取所有的Track。
注：未实现。
---------
第二阶段：
原因：为了更好的衔接第三阶段，所以抛弃了伪第二阶段。
原理：从头读取，过滤全局数据(FF-含义-长度-N个长度)。
MIDI文件分析：记录于[第二阶段---MIDI文件分析.txt]